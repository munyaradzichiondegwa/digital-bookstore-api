{
  "swagger": "2.0",
  "info": {
    "title": "Digital Bookstore API",
    "description": "An API for managing books and authors. Some routes require authentication via GitHub OAuth to create, update, or delete entries.",
    "version": "1.0.0"
  },
  "host": "digital-bookstore-api.onrender.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "securityDefinitions": {
    "github_oauth": {
      "type": "oauth2",
      "authorizationUrl": "https://digital-bookstore-api.onrender.com/auth/github",
      "flow": "implicit",
      "scopes": {}
    }
  },
  "paths": {
    "/auth/github": {
      "get": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/auth/github/callback": {
      "get": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/auth/logout": {
      "get": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/books/": {
      "get": {
        "tags": [
          "Books"
        ],
        "summary": "Get all books",
        "description": "Retrieves a list of all books from the database.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Books"
        ],
        "summary": "Create a new book",
        "description": "Creates a new book in the database. Requires authentication.",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "The book data to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BookInput"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "github_oauth": []
          }
        ]
      }
    },
    "/books/{id}": {
      "get": {
        "tags": [
          "Books"
        ],
        "summary": "Get a single book by ID",
        "description": "Retrieves a single book using its unique MongoDB ObjectId.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Book ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Books"
        ],
        "summary": "Update an existing book",
        "description": "Updates an existing book by its ID. Requires authentication.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Book ID"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "The book data to update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BookInput"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "github_oauth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Books"
        ],
        "summary": "Delete a book",
        "description": "Deletes a book by its ID. Requires authentication.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Book ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "github_oauth": []
          }
        ]
      }
    },
    "/authors/": {
      "get": {
        "tags": [
          "Authors"
        ],
        "summary": "Get all authors",
        "description": "Retrieves a list of all authors from the database.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Authors"
        ],
        "summary": "Create a new author",
        "description": "Creates a new author in the database. Requires authentication.",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "The author data to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuthorInput"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "github_oauth": []
          }
        ]
      }
    },
    "/authors/{id}": {
      "get": {
        "tags": [
          "Authors"
        ],
        "summary": "Get a single author by ID",
        "description": "Retrieves a single author using their unique MongoDB ObjectId.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Author ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Authors"
        ],
        "summary": "Update an existing author",
        "description": "Updates an existing author by their ID. Requires authentication.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Author ID"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "The author data to update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuthorInput"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "github_oauth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Authors"
        ],
        "summary": "Delete an author",
        "description": "Deletes an author by their ID. Requires authentication.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Author ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "github_oauth": []
          }
        ]
      }
    }
  },
  "definitions": {
    "Book": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "example": "The Great Gatsby"
        },
        "authorId": {
          "type": "string",
          "example": "66a16d8a7f1f3a8e1b9b3b4a"
        },
        "publicationYear": {
          "type": "number",
          "example": 1925
        },
        "genre": {
          "type": "string",
          "example": "Classic"
        },
        "isbn": {
          "type": "string",
          "example": "978-0743273565"
        },
        "publisher": {
          "type": "string",
          "example": "Charles Scribner's Sons"
        },
        "pageCount": {
          "type": "number",
          "example": 180
        },
        "coverType": {
          "type": "string",
          "example": "Paperback"
        },
        "summary": {
          "type": "string",
          "example": "A novel about the American dream during the Roaring Twenties."
        }
      }
    },
    "Author": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string",
          "example": "F. Scott"
        },
        "lastName": {
          "type": "string",
          "example": "Fitzgerald"
        },
        "birthYear": {
          "type": "number",
          "example": 1896
        },
        "nationality": {
          "type": "string",
          "example": "American"
        }
      }
    },
    "BookInput": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "example": "The Great Gatsby"
        },
        "authorId": {
          "type": "string",
          "example": "66a16d8a7f1f3a8e1b9b3b4a"
        },
        "publicationYear": {
          "type": "number",
          "example": 1925
        },
        "genre": {
          "type": "string",
          "example": "Classic"
        },
        "isbn": {
          "type": "string",
          "example": "978-0743273565"
        },
        "publisher": {
          "type": "string",
          "example": "Charles Scribner's Sons"
        },
        "pageCount": {
          "type": "number",
          "example": 180
        },
        "coverType": {
          "type": "string",
          "example": "Paperback"
        },
        "summary": {
          "type": "string",
          "example": "A novel about the American dream during the Roaring Twenties."
        }
      },
      "required": [
        "title",
        "authorId",
        "publicationYear",
        "genre",
        "isbn",
        "pageCount",
        "summary"
      ]
    },
    "AuthorInput": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string",
          "example": "F. Scott"
        },
        "lastName": {
          "type": "string",
          "example": "Fitzgerald"
        },
        "birthYear": {
          "type": "number",
          "example": 1896
        },
        "nationality": {
          "type": "string",
          "example": "American"
        }
      },
      "required": [
        "firstName",
        "lastName",
        "birthYear",
        "nationality"
      ]
    }
  }
}